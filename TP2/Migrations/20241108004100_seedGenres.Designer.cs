// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP2.Data;

#nullable disable

namespace TP2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241108004100_seedGenres")]
    partial class seedGenres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TP2.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("MembershipTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MembershipTypeId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TP2.Models.CustomerMovie", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("CustomerMovies");
                });

            modelBuilder.Entity("TP2.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a5b7ec1-8bce-488c-876d-5e11eb573b1f"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("3b8c6f4c-4b7b-4f4b-8b5c-5e11eb573b1f"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("4c9b6f4c-4b7b-4f4b-8b5c-5e11eb573b1f"),
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("5d9b6f4c-4b7b-4f4b-8b5c-5e11eb573b1f"),
                            Name = "Crime"
                        },
                        new
                        {
                            Id = new Guid("6e9b6f4c-4b7b-4f4b-8b5c-5e11eb573b1f"),
                            Name = "Drama"
                        },
                        new
                        {
                            Id = new Guid("7f9b6f4c-4b7b-4f4b-8b5c-5e11eb573b1f"),
                            Name = "Fantasy"
                        });
                });

            modelBuilder.Entity("TP2.Models.MembershipType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("DiscountRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("DurationInMonth")
                        .HasColumnType("int");

                    b.Property<decimal>("SignUpFee")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("MembershipTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a5b7ec1-8bce-488c-876d-5e11eb573b1f"),
                            DiscountRate = 10.0m,
                            DurationInMonth = 12,
                            SignUpFee = 100.00m
                        },
                        new
                        {
                            Id = new Guid("79426dcf-c58e-4f1e-a744-5367624f4557"),
                            DiscountRate = 5.0m,
                            DurationInMonth = 6,
                            SignUpFee = 150.00m
                        },
                        new
                        {
                            Id = new Guid("aeeccf4b-cf76-4888-ace2-17a29a5ffa49"),
                            DiscountRate = 15.0m,
                            DurationInMonth = 24,
                            SignUpFee = 200.00m
                        });
                });

            modelBuilder.Entity("TP2.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("TP2.Models.Customer", b =>
                {
                    b.HasOne("TP2.Models.MembershipType", "MembershipType")
                        .WithMany("Customers")
                        .HasForeignKey("MembershipTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MembershipType");
                });

            modelBuilder.Entity("TP2.Models.CustomerMovie", b =>
                {
                    b.HasOne("TP2.Models.Customer", "Customer")
                        .WithMany("CustomerMovies")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP2.Models.Movie", "Movie")
                        .WithMany("CustomerMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("TP2.Models.Movie", b =>
                {
                    b.HasOne("TP2.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("TP2.Models.Customer", b =>
                {
                    b.Navigation("CustomerMovies");
                });

            modelBuilder.Entity("TP2.Models.MembershipType", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("TP2.Models.Movie", b =>
                {
                    b.Navigation("CustomerMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
